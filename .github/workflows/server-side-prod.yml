name: Server-side (prod)

on:
  push:
    branches: [ main ]
    paths:
    - '.github/workflows/server-side-prod.yml'
    - 'server/**'
  pull_request:
    branches: [ main ]
    paths:
    - '.github/workflows/server-side-prod.yml'
    - 'server/**'


jobs:
  deploy:

    runs-on: ubuntu-latest
    environment:
      name: prod
      url: https://progateway.ru

    steps:
    - name: Install SSH Key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSH_PRIVATE_DEPLOY }}
        known_hosts: 'just-a-placeholder-so-we-dont-get-errors'
    - name: Adding Known Hosts
      run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
      working-directory: server/

    - name: Setup environment variables
      run: |
        echo "POSTGRES_CONNECT=${{ secrets.POSTGRES_CONNECT }}" >> .env
        echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
        echo "EMAIL_SMTP=${{ secrets.EMAIL_SMTP }}" >> .env
        echo "EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }}" >> .env
        echo "EMAIL_LOGIN=${{ secrets.EMAIL_LOGIN }}" >> .env
        echo "EMAIL_HTTP=${{ secrets.EMAIL_HTTP }}" >> .env
        echo "COOKIE_SECURE=${{ secrets.COOKIE_SECURE }}" >> .env
        echo "COOKIE_DOMAIN=${{ secrets.COOKIE_DOMAIN }}" >> .env

    - uses: actions/checkout@master

    - name: Create GitHub deployment
      uses: chrnorm/deployment-action@releases/v1
      id: deployment
      with:
        token: "${{ github.token }}"
        target_url: https://progateway.ru
        environment: prod

    - name: Deploy static content to local server (rsync)
      run: rsync -avz / ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/home/admin/progateway/server

    - name: Connect to server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_DEPLOY }}
        script: |
          cd /home/admin/progateway/server
          docker-compose down --rmi local
          docker-compose up -d --build

    - name: Update deployment status (success)
      if: success()
      uses: chrnorm/deployment-status@releases/v1
      with:
        token: "${{ github.token }}"
        target_url: https://progateway.ru
        state: "success"
        deployment_id: ${{ steps.deployment.outputs.deployment_id }}
    - name: Update deployment status (failure)
      if: failure()
      uses: chrnorm/deployment-status@releases/v1
      with:
        token: "${{ github.token }}"
        target_url: https://progateway.ru
        state: "failure"
        deployment_id: ${{ steps.deployment.outputs.deployment_id }}